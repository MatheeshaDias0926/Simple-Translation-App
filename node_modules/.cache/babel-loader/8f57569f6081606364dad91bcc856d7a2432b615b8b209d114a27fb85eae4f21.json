{"ast":null,"code":"var _jsxFileName = \"/Users/matheeshadias/Desktop/translation-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { ChakraProvider, Box, Input, Button, Text, Select } from \"@chakra-ui/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [text, setText] = useState(\"\");\n  const [translatedText, setTranslatedText] = useState(\"\");\n  const [language, setLanguage] = useState(\"ar\"); // Default to Arabic\n  const [direction, setDirection] = useState(\"rtl\");\n  const API_KEY = \"YOUR_GOOGLE_TRANSLATE_API_KEY\"; // Replace with your API key\n\n  const handleTranslate = async () => {\n    if (!text) {\n      alert(\"Please enter text to translate.\");\n      return;\n    }\n    try {\n      const response = await axios.post(`https://translation.googleapis.com/language/translate/v2`, {}, {\n        params: {\n          q: text,\n          target: \"en\",\n          // Translate to English\n          source: language,\n          key: API_KEY\n        }\n      });\n      setTranslatedText(response.data.data.translations[0].translatedText);\n    } catch (error) {\n      console.error(\"Error translating text:\", error);\n      alert(\"Translation failed. Check your API key or network connection.\");\n    }\n  };\n  const handleLanguageChange = e => {\n    const selectedLang = e.target.value;\n    setLanguage(selectedLang);\n    setDirection(selectedLang === \"ar\" || selectedLang === \"he\" ? \"rtl\" : \"ltr\");\n  };\n  return /*#__PURE__*/_jsxDEV(ChakraProvider, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      maxW: \"500px\",\n      m: \"auto\",\n      mt: \"50px\",\n      p: \"20px\",\n      boxShadow: \"lg\",\n      borderRadius: \"md\",\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        fontSize: \"xl\",\n        fontWeight: \"bold\",\n        mb: \"10px\",\n        children: \"Simple Translation App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        value: language,\n        onChange: handleLanguageChange,\n        mb: \"10px\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"ar\",\n          children: \"Arabic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"he\",\n          children: \"Hebrew\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"fr\",\n          children: \"French\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"es\",\n          children: \"Spanish\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Enter text\",\n        value: text,\n        onChange: e => setText(e.target.value),\n        textAlign: direction === \"rtl\" ? \"right\" : \"left\",\n        mb: \"10px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        colorScheme: \"blue\",\n        onClick: handleTranslate,\n        width: \"100%\",\n        children: \"Translate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), translatedText && /*#__PURE__*/_jsxDEV(Box, {\n        mt: \"20px\",\n        p: \"10px\",\n        bg: \"gray.100\",\n        borderRadius: \"md\",\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"lg\",\n          fontWeight: \"bold\",\n          children: \"Translation:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: translatedText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"2KYFdek4IeJQxfDe8Syli5XIZS8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","ChakraProvider","Box","Input","Button","Text","Select","jsxDEV","_jsxDEV","App","_s","text","setText","translatedText","setTranslatedText","language","setLanguage","direction","setDirection","API_KEY","handleTranslate","alert","response","post","params","q","target","source","key","data","translations","error","console","handleLanguageChange","e","selectedLang","value","children","maxW","m","mt","p","boxShadow","borderRadius","fontSize","fontWeight","mb","fileName","_jsxFileName","lineNumber","columnNumber","onChange","placeholder","textAlign","colorScheme","onClick","width","bg","_c","$RefreshReg$"],"sources":["/Users/matheeshadias/Desktop/translation-app/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport {\n  ChakraProvider,\n  Box,\n  Input,\n  Button,\n  Text,\n  Select,\n} from \"@chakra-ui/react\";\n\nconst App = () => {\n  const [text, setText] = useState(\"\");\n  const [translatedText, setTranslatedText] = useState(\"\");\n  const [language, setLanguage] = useState(\"ar\"); // Default to Arabic\n  const [direction, setDirection] = useState(\"rtl\");\n\n  const API_KEY = \"YOUR_GOOGLE_TRANSLATE_API_KEY\"; // Replace with your API key\n\n  const handleTranslate = async () => {\n    if (!text) {\n      alert(\"Please enter text to translate.\");\n      return;\n    }\n\n    try {\n      const response = await axios.post(\n        `https://translation.googleapis.com/language/translate/v2`,\n        {},\n        {\n          params: {\n            q: text,\n            target: \"en\", // Translate to English\n            source: language,\n            key: API_KEY,\n          },\n        }\n      );\n\n      setTranslatedText(response.data.data.translations[0].translatedText);\n    } catch (error) {\n      console.error(\"Error translating text:\", error);\n      alert(\"Translation failed. Check your API key or network connection.\");\n    }\n  };\n\n  const handleLanguageChange = (e) => {\n    const selectedLang = e.target.value;\n    setLanguage(selectedLang);\n    setDirection(\n      selectedLang === \"ar\" || selectedLang === \"he\" ? \"rtl\" : \"ltr\"\n    );\n  };\n\n  return (\n    <ChakraProvider>\n      <Box\n        maxW=\"500px\"\n        m=\"auto\"\n        mt=\"50px\"\n        p=\"20px\"\n        boxShadow=\"lg\"\n        borderRadius=\"md\"\n      >\n        <Text fontSize=\"xl\" fontWeight=\"bold\" mb=\"10px\">\n          Simple Translation App\n        </Text>\n\n        <Select value={language} onChange={handleLanguageChange} mb=\"10px\">\n          <option value=\"ar\">Arabic</option>\n          <option value=\"he\">Hebrew</option>\n          <option value=\"fr\">French</option>\n          <option value=\"es\">Spanish</option>\n        </Select>\n\n        <Input\n          placeholder=\"Enter text\"\n          value={text}\n          onChange={(e) => setText(e.target.value)}\n          textAlign={direction === \"rtl\" ? \"right\" : \"left\"}\n          mb=\"10px\"\n        />\n\n        <Button colorScheme=\"blue\" onClick={handleTranslate} width=\"100%\">\n          Translate\n        </Button>\n\n        {translatedText && (\n          <Box mt=\"20px\" p=\"10px\" bg=\"gray.100\" borderRadius=\"md\">\n            <Text fontSize=\"lg\" fontWeight=\"bold\">\n              Translation:\n            </Text>\n            <Text>{translatedText}</Text>\n          </Box>\n        )}\n      </Box>\n    </ChakraProvider>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}