{"ast":null,"code":"var _jsxFileName = \"/Users/matheeshadias/Desktop/translation-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\"; // Optional styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [inputText, setInputText] = useState(\"\");\n  const [translatedText, setTranslatedText] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  // Load API key from environment variables\n  const apiKey = process.env.REACT_APP_GOOGLE_TRANSLATE_API_KEY; // Ensure this is set in your .env file\n\n  const handleTranslate = async () => {\n    if (!inputText.trim()) {\n      setError(\"Please enter text to translate.\");\n      return;\n    }\n    setError(\"\"); // Clear previous errors\n\n    try {\n      const response = await axios.post(`https://translation.googleapis.com/language/translate/v2?key=${apiKey}`, {\n        q: inputText,\n        target: \"en\",\n        format: \"text\"\n      });\n      setTranslatedText(response.data.data.translations[0].translatedText);\n    } catch (error) {\n      setError(\"Translation failed. Please try again.\");\n      console.error(\"Translation Error:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Simple Translation App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: inputText,\n      onChange: e => setInputText(e.target.value),\n      placeholder: \"Enter text to translate...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleTranslate,\n      children: \"Translate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this), translatedText && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Translated Text:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: translatedText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"7OVH+eMXXxQkyYD4UOqVJlkkQd8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","App","_s","inputText","setInputText","translatedText","setTranslatedText","error","setError","apiKey","process","env","REACT_APP_GOOGLE_TRANSLATE_API_KEY","handleTranslate","trim","response","post","q","target","format","data","translations","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/matheeshadias/Desktop/translation-app/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\"; // Optional styling\n\nfunction App() {\n  const [inputText, setInputText] = useState(\"\");\n  const [translatedText, setTranslatedText] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  // Load API key from environment variables\n  const apiKey = process.env.REACT_APP_GOOGLE_TRANSLATE_API_KEY; // Ensure this is set in your .env file\n\n  const handleTranslate = async () => {\n    if (!inputText.trim()) {\n      setError(\"Please enter text to translate.\");\n      return;\n    }\n\n    setError(\"\"); // Clear previous errors\n\n    try {\n      const response = await axios.post(\n        `https://translation.googleapis.com/language/translate/v2?key=${apiKey}`,\n        {\n          q: inputText,\n          target: \"en\",\n          format: \"text\",\n        }\n      );\n\n      setTranslatedText(response.data.data.translations[0].translatedText);\n    } catch (error) {\n      setError(\"Translation failed. Please try again.\");\n      console.error(\"Translation Error:\", error);\n    }\n  };\n\n  return (\n    <div className=\"app\">\n      <h1>Simple Translation App</h1>\n      <textarea\n        value={inputText}\n        onChange={(e) => setInputText(e.target.value)}\n        placeholder=\"Enter text to translate...\"\n      />\n      <button onClick={handleTranslate}>Translate</button>\n\n      {error && <p className=\"error\">{error}</p>}\n      {translatedText && (\n        <div className=\"result\">\n          <h3>Translated Text:</h3>\n          <p>{translatedText}</p>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}